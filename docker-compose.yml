version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: gossamer-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: strapi
      POSTGRES_USER: strapi
      POSTGRES_PASSWORD: strapi
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - gossamer-network

  strapi:
    build:
      context: ./strapi
      dockerfile: Dockerfile.dev
    container_name: gossamer-strapi
    restart: unless-stopped
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: strapi
      DATABASE_USERNAME: strapi
      DATABASE_PASSWORD: strapi
      JWT_SECRET: your-jwt-secret-key-here
      ADMIN_JWT_SECRET: your-admin-jwt-secret-here
      APP_KEYS: key1,key2,key3,key4
      API_TOKEN_SALT: your-api-token-salt
      TRANSFER_TOKEN_SALT: your-transfer-token-salt
      NODE_ENV: development
    ports:
      - "1337:1337"
    volumes:
      - ./strapi:/app
      - strapi_node_modules:/app/node_modules
      - strapi_uploads:/app/public/uploads
    depends_on:
      - postgres
    networks:
      - gossamer-network
    command: npm run develop

  next:
    build:
      context: ./next
      dockerfile: Dockerfile.dev
    container_name: gossamer-next
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_STRAPI_URL: http://localhost:1337
    ports:
      - "3000:3000"
    volumes:
      - ./next:/app
      - next_node_modules:/app/node_modules
    depends_on:
      - strapi
    networks:
      - gossamer-network
    command: npm run dev

volumes:
  postgres_data:
  strapi_node_modules:
  next_node_modules:
  strapi_uploads:

networks:
  gossamer-network:
    driver: bridge
